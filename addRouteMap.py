from cvprac.cvp_client import CvpClient
import ssl
import requests.packages.urllib3

ssl._create_default_https_context = ssl._create_unverified_context
requests.packages.urllib3.disable_warnings()

#Use CVP token generated by 
token = <CVP_Token>


clnt = CvpClient()
clnt.connect(nodes=['www.arista.io'], username='', password='', is_cvaas=True, cvaas_token=token)

#create the configlet with configuration
configletName = "Python_RM_Test"

configletConfig = """!
!this is a test with python + CVaaS eAPI
ip prefix-list testauto
    seq 10 permit 5.0.0.0/8
route-map testauto permit 10
    match ip address prefix-list testauto
    set as-path prepend 65534.105 65534.105 65534.105
    route-map testauto permit 20
!
"""
clnt.api.add_configlet(configletName,configletConfig)

#Assign the created configlet to device
device_name = 'AR-LTEC-PE2'
device = clnt.api.get_device_by_name(device_name, search_by_hostname=True)
configlet = clnt.api.get_configlet_by_name(configletName)

task = clnt.api.apply_configlets_to_device("", device, [configlet])

#Generate Change Control with tasks created 
tlist = task.get('data', {}).get('taskIds')

ccid = "cvprac"+str(tlist)[2:-2]
ccname = "eAPI_gen_CC_for_task"+str(tlist)[1:-1]

CC = clnt.api.create_change_control_v3(ccid, ccname, tlist)

#wait 2 sec, this is not necessary if the node where the python script is running is time synced with CVP.
#If not, this will prevent approval issue if the node sends an approval timestamp that is earlier than the task creation time on CVP
import time
time.sleep(2)

#Approve the Change Control created above
from datetime import datetime

clnt.api.approve_change_control(ccid, timestamp=datetime.utcnow().isoformat() + 'Z')

#Execute the Change Control approved above
clnt.api.execute_change_controls([ccid])